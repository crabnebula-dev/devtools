use inspector_protocol_primitives::TypeScriptDef;
use std::{error::Error, path::PathBuf};
use typescript_type_def::{write_definition_file, DefinitionFileOptions};

fn main() -> Result<(), Box<dyn Error + Send + Sync + 'static>> {
	let path = PathBuf::from(env!("CARGO_MANIFEST_DIR"))
		.parent()
		.ok_or("Invalid path")?
		.parent()
		.ok_or("Invalid path")?
		.join("inspector-protocol")
		.join("schemas")
		.join("devtools.d.ts");

	let mut file = std::fs::File::create(&path)?;

	// FIXME: We are exposing them manually, but at long term,
	// it could be simplified by loading it from the schema.json
	write_definition_file::<_, TypeScriptDef<'static>>(
		&mut file,
		DefinitionFileOptions {
			header: "// AUTO-GENERATED by `inspector-protocol-typegen`\n".into(),
			root_namespace: None,
		},
	)
	.map(|stats| {
		println!(
			"Wrote {} type definitions to {}",
			stats.type_definitions,
			path.display()
		);
	})
	.map_err(Into::into)
}
