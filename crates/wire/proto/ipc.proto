syntax = "proto3";

package rs.tauri.devtools.ipc;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "common.proto";

message Update {
    // A list of new ipc requests that happened since the last `IPCUpdate` was
    // sent.
    //
    // If this is empty, no new events were emitted.
    repeated Request new_requests = 1;

    map<uint64, Stats> stats_update = 3;

    // A count of how many ipc request events were not
    // recorded because the application's event buffer was at capacity.
    //
    // If everything is working normally, this should be 0. If it is greater
    // than 0, that may indicate that some data is missing from this update, and
    // it may be necessary to increase the number of events buffered by the
    // application to ensure that data loss is avoided.
    //
    // If the application's instrumentation ensures reliable delivery of events,
    // this will always be 0.
    uint64 dropped_events = 2;
}


// Data recorded when a new IPC Request is initiated
message Request {
    // The numeric ID ID of the request.
    common.Id id = 1;
    // The command name that was invoked
    string cmd = 4;
    Kind kind = 5;
    // The numeric ID of the request's `Metadata`.
    //
    // This identifies the `Metadata` that describes the `tracing` span
    // corresponding to this request. The metadata for this ID will have been sent
    // in a prior `RegisterMetadata` message.
    common.MetaId metadata = 6;
    // A list of `Field` objects attached to this request.
    repeated common.Field fields = 7;
    // The location in code where the request handler is defined.
    common.Location handler = 8;

    enum Kind {
        SYNC = 0;
        SYNC_THREADPOOL = 1;
        ASYNC = 2;
    }
}

// IPC Request performance statistics.
message Stats {
    // Timestamp of when the request was initiated.
    google.protobuf.Timestamp initiated_at = 2;
    // Timestamp of when the request was completed.
    google.protobuf.Timestamp completed_at = 3;

    // Performance data for request deserialization.
    Timestamps deserialize_request = 4;

    // Performance data for response serialization.
    Timestamps serialize_reponse = 5;

    // Performance data for the actual request handler.
    Timestamps inner = 6;
}

message Timestamps {
    optional google.protobuf.Timestamp first_enter = 1;
    optional google.protobuf.Timestamp last_enter_started = 2;
    optional google.protobuf.Timestamp last_enter_ended = 3;
    google.protobuf.Duration waiting_time = 4;
    google.protobuf.Duration busy_time = 5;
}
